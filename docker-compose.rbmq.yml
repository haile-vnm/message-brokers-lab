version: '3.4'
name: message-brokers
# env_file:
#   - ./env/.env

services:
  rabbitmq1:
    extends:
      file: docker-compose.base.yml
      service: rabbitmq
    volumes:
      - ./local-resources/rabbitmq-cluster/1/data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_NODENAME=rabbit@rabbitmq1

  rabbitmq2:
    extends:
      file: docker-compose.base.yml
      service: rabbitmq
    volumes:
      - ./local-resources/rabbitmq-cluster/2/data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_NODENAME=rabbit@rabbitmq2

  rabbitmq3:
    extends:
      file: docker-compose.base.yml
      service: rabbitmq
    volumes:
      - ./local-resources/rabbitmq-cluster/3/data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_NODENAME=rabbit@rabbitmq3

  rabbitmq:
    image: nginx:latest
    restart: always
    ports:
      - "15672:15672"
    volumes:
      - ./nginx.rabbitmq.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      rabbitmq1:
        condition: service_healthy
      rabbitmq2:
        condition: service_healthy
      rabbitmq3:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "service", "nginx", "status"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 1m

  rabbitmq-publisher:
    extends:
      file: docker-compose.base.yml
      service: nx-app-base
    env_file:
      - ./env/.rabbitmq
    ports:
      - '3000:3000'
    command: nx serve rabbitmq
    healthcheck:
      test: ["CMD-SHELL", "node healthcheck.js http://localhost:3000"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 1m
    depends_on:
      rabbitmq:
        condition: service_healthy

  rbmq-consumer:
    extends:
      file: docker-compose.base.yml
      service: nx-app-base
    deploy:
      replicas: 2
    env_file:
      - ./env/.rabbitmq
    command: nx run rbmq-consumer:serve --args="${ARGS}"
    depends_on:
      rabbitmq-publisher:
        condition: service_healthy

volumes:
  root-node_modules: null
